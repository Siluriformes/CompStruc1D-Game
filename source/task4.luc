module task4 (
    input clk,  // clock
    input rst,  // reset
    input enable,
    input in1[3],
    input in2[3],
    output led[3],
    output out[3]
  ) {

    .clk(clk) {
    .rst(rst){
      dff stage[2];
      fsm state = {IDLE,Q1,Q2,Q3,WIN};
    }
  }
  alu alu1;
  always {
    out = 0;   
    alu1.alufn = 6b011010; //"A"(LDR) default ALU does nothing
    case(in1){  //first operator
      3b001: alu1.alufn = 6b000000; //ADD
      3b010: alu1.alufn = 6b000001; //SUB
      3b100: alu1.alufn = 6b000010;} //MUL   
    case(stage.q){
    1:led[0] = 1;
    2:led[0] = 1;
      led[1] = 1;
    3:led[0] = 1;
      led[1] = 1;
      led[2] = 1;        
    default:
      led[2:0] = 0;
    }
    alu1.a = 0;
    alu1.b = 0;

    case(state.q){
      state.IDLE:
      if(enable){
        state.d = state.Q1;}
          
      state.Q1:  // 001 010 5+6-4=7
      alu1.a = 8d5;
      alu1.b = 8d6;
      if(alu1.alu==8d11&&in2==3b010){   
      stage.d = stage.q+1;
      state.d = state.Q2;}
                        
      state.Q2:  //100 001 2*3+3 = 9 
      alu1.a = 8d2;
      alu1.b = 8d3;
      if(alu1.alu==8d6&&in2==3b001){  
      stage.d = stage.q+1; 
      state.d = state.Q3;}

      state.Q3:  //010 001 8-7+5 = 6
      alu1.a = 8d8;
      alu1.b = 8d7;
      if(alu1.alu==8d1&&in2==3b001){  
      stage.d = stage.q+1;       
      state.d = state.WIN;}
      
      state.WIN:
      out = 3b1;     
    }
  }
}
